; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "NLauncher"
#define MyAppVersion "0.9.0"
#define MyAppPublisher "NALStudio"
#define MyAppURL "https://nalstudio.github.io/NLauncher"
#define MyAppExeName "NLauncher.exe"
#define MyAppDataDir "NALStudio\NLauncher"

#define MyAppUrlProtocolName "nlauncher"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{6DC55F97-A79E-4789-9CFC-87D7BB69F4CC}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppPublisher}\{#MyAppName}
UninstallDisplayIcon={app}\{#MyAppExeName}
UninstallDisplayName={#MyAppName}
UninstallFilesDir={app}\uninstall
; "ArchitecturesAllowed=x64compatible" specifies that Setup cannot run
; on anything but x64 and Windows 11 on Arm.
ArchitecturesAllowed=x64compatible
; "ArchitecturesInstallIn64BitMode=x64compatible" requests that the
; install be done in "64-bit mode" on x64 or Windows 11 on Arm,
; meaning it should use the native 64-bit Program Files directory and
; the 64-bit view of the registry.
ArchitecturesInstallIn64BitMode=x64compatible
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only).
;PrivilegesRequired=lowest
;PrivilegesRequiredOverridesAllowed=dialog    I don't want to let the user to choose the priviledges since they have to run as admin during app installs anyway
OutputDir=bin\Publish
OutputBaseFilename=NLauncher_Installer
SetupIconFile=wwwroot\logo.ico
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "finnish"; MessagesFile: "compiler:Languages\Finnish.isl"

[CustomMessages]
english.UninstallAppsMessage=Do you want to uninstall all NLauncher applications?%n%n%nThis will remove all files under:%n%n
finnish.UninstallAppsMessage=Haluatko poistaa kaikki NLauncher sovellukset?%n%n%nTämä poistaa kaikki tiedostot kansiosta:%n%n

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"

[Files]
Source: "bin\Publish\net9.0-windows\*"; DestDir: "{app}"; Excludes: "*.pdb"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]
; https://stackoverflow.com/questions/13567119/inno-setup-registry-entry-for-custom-url-protocol/13567401#13567401
Root: HKCR; Subkey: "{#MyAppUrlProtocolName}"; ValueType: "string"; ValueData: "URL:Custom Protocol"; Flags: uninsdeletekey
Root: HKCR; Subkey: "{#MyAppUrlProtocolName}"; ValueType: "string"; ValueName: "URL Protocol"; ValueData: ""
Root: HKCR; Subkey: "{#MyAppUrlProtocolName}\DefaultIcon"; ValueType: "string"; ValueData: "{app}\{#MyAppExeName},0"
Root: HKCR; Subkey: "{#MyAppUrlProtocolName}\shell\open\command"; ValueType: "string"; ValueData: """{app}\{#MyAppExeName}"" protoc ""%1"""

[InstallDelete]
; Refresh caches during update
Type: filesandordirs; Name: "{localappdata}\{#MyAppDataDir}\WebView"
Type: filesandordirs; Name: "{localappdata}\{#MyAppDataDir}\Cache"

[UninstallDelete]
; Application data
; Do NOT blanket remove the app dir, see: https://jrsoftware.org/ishelp/topic_uninstalldeletesection.htm
Type: dirifempty; Name: "{app}\Downloads"

; The app directory remove fails if we removed the library directory during uninstall
; Thus we force remove it if it's empty
Type: dirifempty; Name: "{app}"

; Useless appdata
; This will only remove this data from this current user, all others are left untouched, which is fine since deleting these files isn't that crucial anyway.
Type: filesandordirs; Name: "{localappdata}\{#MyAppDataDir}\WebView"
Type: filesandordirs; Name: "{localappdata}\{#MyAppDataDir}\Cache"
Type: filesandordirs; Name: "{localappdata}\{#MyAppDataDir}\Logs"

[Code]
 procedure CurUninstallStepChanged (CurUninstallStep: TUninstallStep);
 var applibdir : String;
 var mres : integer;
 begin
    case CurUninstallStep of                   
      usUninstall:
        begin
          applibdir := ExpandConstant('{app}\Library');
          if DirExists(applibdir) and not DelTree(applibdir, True, False, False) then
            mres := MsgBox(ExpandConstant('{cm:UninstallAppsMessage}') + applibdir, mbConfirmation, MB_YESNO or MB_DEFBUTTON2);
            if mres = IDYES then
              DelTree(applibdir, True, True, True);
       end;
   end;
end;

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

