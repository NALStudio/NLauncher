@page "/store"

@using NLauncher.Components.Cards
@using NLauncher.Index.Models.Index
@using NLauncher.Services.Index
@using System.Collections.Immutable
@using System.Runtime.InteropServices
@using NLauncher.Shared.Helpers

@inject IndexService IndexService

<PageTitle>NLauncher - Store</PageTitle>

<MudGrid Style="position:relative;top:0;left:0;right:0;bottom:0;"> 
    @{
        int storeCardCount;
        if (entriesSorted.HasValue)
            storeCardCount = entriesSorted.Value.Length;
        else if (showLoadingCards!.Value) // showLoadingCards is the first bool we set on page load so it must have a value at this point
            storeCardCount = 12;
        else
            storeCardCount = 0;

        for (int i = 0; i < storeCardCount; i++)
        {
            IndexEntry? app = entriesSorted?[i];
            <StoreCardItem Entry="app" />
        }
    }
</MudGrid>

@code {
    private IndexManifest? index;
    private ImmutableArray<IndexEntry>? entriesSorted;

    private bool? showLoadingCards = null;

    protected override async Task OnInitializedAsync()
    {
        if (IndexService.TryGetCachedIndex(out index))
        {
            showLoadingCards = false;
        }
        else
        {
            showLoadingCards = true;
            index = await IndexService.GetIndexAsync();
        }

        entriesSorted = await Task.Run(() => SortEntries(index));
        StateHasChanged();
    }

    private static Task<ImmutableArray<IndexEntry>> SortEntries(IndexManifest manifest)
    {
        ImmutableArray<IndexEntry> entries = manifest.Entries;
        return Task.Run(() => AppManifestSorter.Sort(entries));
    }
}
