@page "/store"

@using NLauncher.Components.Cards
@using NLauncher.Index.Helpers
@using NLauncher.Index.Models.Index
@using NLauncher.Services.Index
@using System.Collections.Immutable
@using System.Runtime.InteropServices

@inject IndexService IndexService

<PageTitle>NLauncher - Store</PageTitle>

<MudGrid>
    @{
        int storeCardCount = entriesSorted?.Length ?? 12;
        for (int i = 0; i < storeCardCount; i++)
        {
            IndexEntry? app = entriesSorted?[i];
            <StoreCardItem Entry="app" />
        }
    }
</MudGrid>

@code {
    private IndexManifest? index;
    private ImmutableArray<IndexEntry>? entriesSorted;

    protected override async Task OnInitializedAsync()
    {
        if (IndexService.TryGetCachedIndex(out index))
        {
            // Try to get index and sort entries synchronously
            // so that the scroll position is retained when navigating back
            entriesSorted = SortEntries(index);
        }
        else
        {
            index = await IndexService.GetIndexAsync();
            // Sort entries asynchronously to not freeze the UI
            // we show a skeleton web page in the mean time.
            entriesSorted = await Task.Run(() => SortEntries(index));
            StateHasChanged(); // Trigger state change after all this awaiting
        }

        // DEBUG
        // entriesSorted = null;
    }

    private static ImmutableArray<IndexEntry> SortEntries(IndexManifest manifest)
    {
        ImmutableArray<IndexEntry> entries = manifest.Entries;
        return AppManifestSorter.Sort(entries);
    }
}
