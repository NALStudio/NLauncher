@using NLauncher.Code.Language
@using NLauncher.Index.Models.Applications
@using NLauncher.Services.Sessions

<MudDialog Class="pb-4 mud-theme-transparent" Style="backdrop-filter:blur(48px)">
    <DialogContent>
        <MudExpansionPanels Style="backdrop-filter: blur(48px)" Elevation="0">
            <MudExpansionPanel Expanded Text="Application">
                @{
                    AppVersion? latest = App.GetLatestVersion();
                    string latestText = $"Latest ({latest?.Identifier ?? "unknown"})";

                    <MudSelect T="uint?" Disabled="@(!libraryEntry.HasValue || !canInstall)" Value="@(libraryEntry?.Data.ChosenVerNum)" ValueChanged="@VerifyAndChangeVersionAsync" Label="Version" Placeholder="@latestText">
                        <MudSelectItem T="uint?" Value="null">@latestText</MudSelectItem>

                        @foreach (AppVersion ver in App.Versions.OrderByDescending(static v => v.VerNum))
                        {
                            if (ver.VerNum == latest?.VerNum)
                                continue;

                            <MudSelectItem T="uint?" Value="@(ver.VerNum)">@(ver.Identifier)</MudSelectItem>
                        }
                    </MudSelect>
                }

                <MudStack Class="my-2" Row AlignItems="AlignItems.Center" Spacing="0">
                    <MudText Class="mr-2" Inline>Local Files:</MudText>
                    @if (size is not null)
                    {
                        // Size available
                        <MudText Inline Color="Color.Primary"><b>@size</b></MudText>
                    }
                    else if (!sizeLoaded)
                    {
                        // Waiting for size to load
                        <MudProgressCircular Indeterminate Size="Size.Small" />
                    }
                    else
                    {
                        // No size data available
                        <MudText Inline><b>N/A</b></MudText>
                    }

                    <MudSpacer />

                    <MudButton Disabled="(!CanBrowseLocalFiles)"
                                DropShadow="false"
                                OnClick="BrowseLocalFilesAsync"
                                Variant="Variant.Filled">Browse</MudButton>
                </MudStack>
            </MudExpansionPanel>

            @if (CanEditArgs)
            {
                <MudExpansionPanel Text="Options">
                    <MudTextField T="string"
                                  Style="word-break:break-all"
                                  Immediate="false"
                                  Value="@(libraryEntry.Value.Data.LaunchOptions)"
                                  ValueChanged="@UpdateArgs"
                                  TextUpdateSuppression="false"
                                  Label="Launch Options"
                                  HelperText="Advanced users may choose to enter modifications to their launch options."
                                  Variant="Variant.Outlined"
                                  ShrinkLabel
                                  Lines="5"
                                  AutoGrow />
                </MudExpansionPanel>
            }

            @if (gameSessionsSorted.Length > 0)
            {
                <MudExpansionPanel Text="Sessions">
                    <MudTimeline>
                        @{
                            DateOnly? previousDate = null;                        
                            foreach (GameSession ses in gameSessionsSorted)
                            {
                                DateOnly date = DateOnly.FromDateTime(ses.StartDateTime);
                                bool newDate = date != previousDate;
                                previousDate = date;

                                <MudTimelineItem Color="@(newDate ? Color.Primary : Color.Default)" Elevation="0" TimelineAlign="TimelineAlign.End">
                                    <ItemOpposite>
                                        @if (newDate)
                                        {
                                            <MudText Color="Color.Primary" Typo="Typo.h6">@(date.ToShortDateString())</MudText>
                                        }
                                    </ItemOpposite>
                                    <ItemContent>
                                        <MudText Typo="Typo.body2">@(ses.StartDateTime.ToShortTimeString()) - @(ses.EndDateTime.ToShortTimeString())</MudText>
                                        <MudText Typo="Typo.body2" Class="mud-text-secondary">@(HumanizeTime.HumanizeTimeSpan(ses.Duration))</MudText>
                                    </ItemContent>
                                </MudTimelineItem>
                            }
                        }
                    </MudTimeline>
                </MudExpansionPanel>
            }
        </MudExpansionPanels>
    </DialogContent>
</MudDialog>