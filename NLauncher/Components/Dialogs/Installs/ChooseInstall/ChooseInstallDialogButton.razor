@using NLauncher.Code
@using NLauncher.Index.Models.Applications.Installs
@using NLauncher.Shared.AppHandlers.Base
@using NLauncher.Shared.AppHandlers.Shared
@using System.Diagnostics

@inject IDialogService DialogService

<MudButton FullWidth Size="Size.Large" Color="Color.Primary" Variant="@GetVariant()" StartIcon="@GetButtonIcon()" Href="@href" Target="_blank" OnClick="@(() => OnClick?.Invoke())">
    @GetButtonText()
</MudButton>

@code {
    [Parameter, EditorRequired]
    public required AppHandler Handler { get; set; }

    [Parameter, EditorRequired]
    public required AppInstall Install { get; set; }

    [Parameter]
    public bool IsRecommended { get; set; } = false;

    [Parameter]
    public Action? OnClick { get; set; }

    private Variant GetVariant() => IsRecommended ? Variant.Outlined : Variant.Text;

    private string? href;

    protected override void OnParametersSet()
    {
        href = GetHref(Handler, Install);
    }

    private string? GetButtonIcon()
    {
        return Handler switch
        {
            InstallAppHandler => Icons.Material.Rounded.Download,
            LinkAppHandler => Icons.Material.Rounded.OpenInNew,
            ManualInstallAppHandler => Icons.Material.Rounded.InstallDesktop,
            _ => null
        };
    }

    private string GetButtonText()
    {
        return Handler switch
        {
            InstallAppHandler => "Automatic Install",
            LinkAppHandler lh => $"Open In {lh.GetUrl(Install).Host}",
            ManualInstallAppHandler mi => $"Manual Install",
            RecommendNLauncherAppHandler => "Install Using NLauncher",
            _ => "<error>"
        };
    }

    private static string? GetHref(AppHandler handler, AppInstall install)
    {
        if (handler is LinkAppHandler lh)
            return lh.GetHref(install);
        if (handler is RecommendNLauncherAppHandler)
            return NLauncherConstants.LatestReleaseUrl;

        if (handler is ManualInstallAppHandler mih)
            return mih.GetDownloadLink(install);

        return null;
    }
}
