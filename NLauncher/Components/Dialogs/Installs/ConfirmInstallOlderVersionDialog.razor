@using NLauncher.Code.Models

<MudDialog>
    <DialogContent>
        You have selected an older version of the app than what is available to download. <br />
        Do you want to install the latest available version or the one you've already selected?
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="@(Dialog.Cancel)">Cancel</MudButton>
        <MudButton OnClick="@(() => Close(UseVersion.Selected))" Variant="Variant.Filled" Color="Color.Warning">
            Use Selected Version
        </MudButton>
        <MudButton OnClick="@(() => Close(UseVersion.Latest))" Variant="Variant.Filled" Color="Color.Success">
            Use Latest Version
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    enum UseVersion { Latest, Selected }

    [CascadingParameter]
    private MudDialogInstance Dialog { get; set; } = default!;

    private void Close(UseVersion version)
    {
        Dialog.Close(version);
    }

    /// <summary>
    /// Returns <paramref name="versionNumber"/> if user wants to use the selected version or <see langword="null" /> if user wants to use the latest version.
    /// </summary>
    public static async Task<CancellableResult<uint?>> ShowAsync(IDialogService dialogService, uint versionNumber)
    {
        IDialogReference dialog = await dialogService.ShowAsync<ConfirmInstallOlderVersionDialog>("Version override set");
        DialogResult? result = await dialog.Result;
        if (result is null || result.Canceled)
            return CancellableResult<uint?>.Cancelled();

        UseVersion ver = (UseVersion)result.Data!;
        uint? vernum = ver switch
        {
            UseVersion.Selected => versionNumber,
            UseVersion.Latest => null,
            _ => throw new InvalidOperationException("INTERNAL ERROR: Invalid version returned by dialog.")
        };

        return CancellableResult<uint?>.Success(vernum);
    }
}
