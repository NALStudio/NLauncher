@using NLauncher.Index.Enums
@using NLauncher.Index.Models.Applications
@using NLauncher.Index.Models.Applications.Installs
@using NLauncher.Index.Models.Index
@using System.Diagnostics.CodeAnalysis
@using NLauncher.Services
@using NLauncher.Shared.AppHandlers
@using NLauncher.Shared.AppHandlers.Base
@using System.Collections.Immutable

<MudPaper Class="pa-3" Style="@Style" Outlined Elevation="0">
    <MudStack Spacing="4">
        <!-- Icon -->
        @if (!IsLoading)
        {
            IndexAsset? icon = Entry.Assets.Closest(iconSize, AssetType.Icon);
            if (icon is not null)
            {
                <MudCardMedia Image="@(icon.Url.ToString())" Height="@iconSize" Style="background-size:contain;" />
            }
        }
        else
        {
            <MudSkeleton Style="align-self:center;" SkeletonType="SkeletonType.Rectangle" Width="@iconSizePx" Height="@iconSizePx" />
        }

        <MudStack Spacing="2">
            <MudButtonGroup FullWidth Variant="Variant.Filled" Size="Size.Large" Color="Color.Primary" DropShadow="false">
                @if (canLinkPlay)
                {
                    string? href = GetLinkPlayHref();

                    <!-- Do not wrap this button in a parent element as it's a part of MudButtonGroup -->
                    <MudButton EndIcon="@(href is not null ? Icons.Material.Rounded.OpenInNew : null)"
                               IconSize="Size.Small"
                               Disabled="@IsLoading"
                               Href="@href"
                               OnClick="@(() => Play())"
                               @oncontextmenu="@(() => Play(alwaysChoose: true))"
                               Target="_blank">
                        @GetLinkPlayText()
                    </MudButton>
                }

                <!-- Only show install button if there are multiple link app handlers or other app handlers --> 
                @if (canInstall)
                {
                    <!-- Do not wrap this button in a parent element as it's a part of MudButtonGroup -->
                    <!-- oncontextmenu:preventDefault produces an error for some reason -->
                    <MudButton Disabled="@IsLoading"
                               OnClick="@(() => Install())"
                               @oncontextmenu="@(() => Install(alwaysChoose: true))">
                        Install
                    </MudButton>
                }
            </MudButtonGroup>

            @if (Entry?.Manifest.Release.State.IsReleased() == true)
            {
                <MudButton OnClick="@AddToLibrary"
                           FullWidth
                           Disabled="@(IsLoading || !canAddToLibrary || isAddingToLibrary)"
                           Variant="Variant.Filled"
                           Size="Size.Large"
                           DropShadow="false">
                    @(canAddToLibrary ? "Add To Library" : "Application In Library")
                </MudButton>
            }
        </MudStack>

        <div>
            @if (!IsLoading)
            {
                AppManifest app = Entry.Manifest;
                Platforms supportedPlatforms = GetSupportedPlatforms();
                bool showPlatforms = supportedPlatforms != Platforms.None;
                bool earlyAccess = app.Release.State == ReleaseState.EarlyAccess;

                <AppInfoCardData Label="Developer" Value="@(app.Developer)" TopDivider="false" />
                <AppInfoCardData Label="Publisher" Value="@(app.Publisher)" />

                @if (earlyAccess)
                {
                    <AppInfoCardData Label="Early Access">
                        <ValueContent>
                            <!-- MudTooltip is taller than the icon for some reason so let's force it to be the same height -->
                            <MudTooltip RootStyle="height:20px" Placement="Placement.Left" Arrow Text="Games in Early Access are not complete and may or may not change further.">
                                <MudIcon Size="Size.Small" Icon="@(Icons.Material.Rounded.Help)" />
                            </MudTooltip>
                        </ValueContent>
                    </AppInfoCardData>
                }

                <AppInfoCardData Label=@(app.Release.State.IsReleased() ? "Release Date" : "Available")
                                 Value="@(GetReleaseDateString(app.Release))" />

                @if (showPlatforms)
                {
                    <AppInfoCardData Label="Platforms">
                        <ValueContent>
                            <MudStack Row Spacing="2">
                                @foreach (Platforms platform in supportedPlatforms.GetIndividualValues())
                                {
                                    string? icon = GetPlatformIcon(platform);
                                    if (icon is not null)
                                    {
                                        <MudTooltip Text="@(platform.ToString())" Placement="Placement.Top">
                                            <MudIcon Icon="@icon" />
                                        </MudTooltip>
                                    }
                                }
                            </MudStack>
                        </ValueContent>
                    </AppInfoCardData>
                }
            }
        </div>
    </MudStack>
</MudPaper>