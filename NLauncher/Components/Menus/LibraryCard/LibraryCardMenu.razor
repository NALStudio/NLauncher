@using MudBlazor.Utilities
@using NLauncher.Index.Models.Index
@using NLauncher.Services.Apps
@using System.Diagnostics
@using NLauncher.Services.Apps.Installing

@inject AppUninstallService UninstallService
@inject IDialogService DialogService

@implements IDisposable

<MudMenu @ref=menu PositionAtCursor Dense>
    <LibraryCardMenuContent Entry="Entry" ActionButton="ActionButton" />
</MudMenu>

@code {
    [Parameter, EditorRequired]
    public required IndexEntry? Entry { get; set; }

    [Parameter]
    public AppActionButton? ActionButton { get; set; }

    private AppActionButton? oldActionButton;

    private MudMenu menu = default!;

    protected override void OnParametersSet()
    {
        Unsubscribe(oldActionButton);
        Subscribe(ActionButton);
        oldActionButton = ActionButton;
    }

    private void Subscribe(AppActionButton? btn)
    {
        if (btn is not null)
            btn.OnStateLoaded += OnActionButtonUpdate;
    }

    private void Unsubscribe(AppActionButton? btn)
    {
        if (btn is not null)
            btn.OnStateLoaded -= OnActionButtonUpdate;
    }

    private void OnActionButtonUpdate()
    {
        StateHasChanged();
    }

    public async Task OpenMenuAsync(MouseEventArgs args)
    {
        await menu.OpenMenuAsync(args);
    }

    public void Dispose()
    {
        Unsubscribe(oldActionButton);
        Unsubscribe(ActionButton);
    }
}