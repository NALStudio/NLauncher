@using MudBlazor.Utilities
@using NLauncher.Index.Models.Index
@using NLauncher.Services.Apps
@using System.Diagnostics
@using NLauncher.Services.Apps.Installing

@inject AppUninstallService UninstallService
@inject IDialogService DialogService

@implements IDisposable

<MudPopover @ref=menu Open="@open" Class="mud-popover-position-override" Style=@popoverStyle AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight">
    <MudList T="object" Dense>
        <LibraryCardMenuContent ParentMenu="this" Entry="Entry" ActionButton="ActionButton" />
    </MudList>
</MudPopover>

<MudOverlay Visible="@open" LockScroll="false" AutoClose OnClosed="Close" />

@code {
    [Parameter, EditorRequired]
    public required IndexEntry? Entry { get; set; }

    [Parameter]
    public AppActionButton? ActionButton { get; set; }

    private AppActionButton? oldActionButton;

    private MudPopover menu = default!;
    private bool open;
    private string? popoverStyle;

    protected override void OnParametersSet()
    {
        Unsubscribe(oldActionButton);
        Subscribe(ActionButton);
        oldActionButton = ActionButton;
    }

    private void Subscribe(AppActionButton? btn)
    {
        if (btn is not null)
            btn.OnStateLoaded += OnActionButtonUpdate;
    }

    private void Unsubscribe(AppActionButton? btn)
    {
        if (btn is not null)
            btn.OnStateLoaded -= OnActionButtonUpdate;
    }

    private void OnActionButtonUpdate()
    {
        StateHasChanged();
    }

    // The incorrect position should be fixed in the next MudBlazor update
    public void Open(MouseEventArgs args)
    {
        open = true;
        popoverStyle = GetPopoverStyle(args);
        StateHasChanged();
    }

    public void Close()
    {
        open = false;
        StateHasChanged();
    }

    // This should work once a new MudBlazor version is released.
    // see: https://github.com/MudBlazor/MudBlazor/pull/10122
    private string GetPopoverStyle(MouseEventArgs args)
    {
        return $"top: {args.PageY.ToPx()}; left: {args.PageX.ToPx()}";
    }

    public void Dispose()
    {
        Unsubscribe(oldActionButton);
        Unsubscribe(ActionButton);
    }
}