@using NLauncher.Index.Enums
@using NLauncher.Index.Models.Index

@{
    IndexAsset? asset;
    if (Height.HasValue)
        asset = Entry.Assets.Closest(Height.Value, findAssetTypes);
    else
        asset = Entry.Assets.Largest(findAssetTypes);

    if (asset?.Type == AssetType.Banner)
    {
        @(ImageContent(asset))
    }
    else
    {
        <MudStack Style=@(GetWidthHeightCss()) AlignItems="AlignItems.Center" Justify="Justify.Center">
            @if (asset is not null)
            {
                <MudImage Src="@(asset.Url.ToString())" Style="height:50%;user-select:none" />
            }
            <MudText Typo="Typo.h4" Style="user-select:none">@(Entry.Manifest.DisplayName)</MudText>
        </MudStack>
    }
}

@code {
    private static readonly AssetType[] findAssetTypes = [AssetType.Banner, AssetType.Icon];

    [Parameter, EditorRequired]
    public required IndexEntry Entry { get; set; }

    [Parameter, EditorRequired]
    public required RenderFragment<IndexAsset> ImageContent { get; set; }

    [Parameter]
    public int? Width { get; set; } = null;
    [Parameter]
    public int? Height { get; set; } = null;

    private string GetWidthHeightCss()
    {
        string css = string.Empty;
        if (Width.HasValue)
            css += $"width:{Width.Value}px;";
        if (Height.HasValue)
            css += $"height:{Height.Value}px;";
        return css;
    }
}